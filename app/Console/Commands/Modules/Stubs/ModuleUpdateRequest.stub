<?php

namespace App\Http\Requests\{modelName};

use App\Models\{modelName};
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Support\Facades\Gate;
use Illuminate\Validation\Rule;

class Update{modelName}Request extends FormRequest
{
    /**
     * Determina se o usuário está autorizado a fazer esta requisição.
     *
     * @return bool
     */
    public function authorize()
    {
        // Obtém o blog sendo atualizado
        ${modelNameLowerCase} = $this->route('{modelNameLowerCase}');

        // Verifica se o blog existe e se o usuário pode atualizá-lo
        if (!${modelNameLowerCase}) {
            return false;
        }

        return Gate::allows('update', ${modelNameLowerCase});
    }

    /**
     * Obtém as regras de validação que se aplicam à requisição.
     *
     * @return array<string, mixed>
     */
    public function rules()
    {
        $modelId = $this->route('{modelNameLowerCase}')?->id;

        return [
            // Adicione suas regras aqui. Exemplos:
            'title' => 'sometimes|required|string|max:255',
            'description' => 'nullable|string',
            'status' => ['sometimes', 'required', Rule::in(['active', 'inactive', 'pending'])],

            // Exemplo com validação unique, ignorando o registro atual
            // 'email' => ['sometimes', 'required', 'email', Rule::unique('users', 'email')->ignore($modelId)],

            // Exemplo para arquivos
            // 'files' => 'sometimes|array',
            // 'files.*' => 'file|mimes:jpeg,png,jpg,gif,pdf|max:5120',
        ];
    }

}

## Autogenerated by Scribe. DO NOT MODIFY.

name: Profile
description: |-

  APIs for user profile management
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/email/change
    metadata:
      groupName: Profile
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send verification email for email change'
      description: |-
        Send verification link to update user's email address with the new one


        **Email Verification Process:**
        After sending, a verification email is automatically sent. When the user
        clicks the verification link, they will be redirected to the frontend with different
        status depending on the result:

        - **Success**: `{FRONTEND_URL}/verify-email?status=success&message=Email+verified+successfully`
        - **Error - Invalid ID**: `{FRONTEND_URL}/verify-email?status=error&message=Invalid+user+ID`
        - **Error - User not found**: `{FRONTEND_URL}/verify-email?status=error&message=User+not+found`
        - **Error - Invalid/expired link**: `{FRONTEND_URL}/verify-email?status=error&message=Invalid+or+expired+verification+link`

        **Important:** The backend manages the entire email verification process,
        including redirects. The frontend must be prepared to receive the
        `status` and `message` parameters in the URL and display appropriate messages.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      new_email:
        name: new_email
        description: 'New email address (max 255 characters, must be valid email format and unique). Must be a valid email format as per RFC standards and not already exist in the system.'
        required: true
        example: newuser@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      new_email: newuser@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Verification link sent to new email.",
            "data": [],
            "meta": {
              "version": "1.0.0"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "status": "error",
               "message": "Invalid or missing data",
               "data": {
                   "new_email": [
                       "The new email field must be a valid email address."
                   ]
               }
           }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "status": "unauthorized",
              "message": "Unauthorized access. Invalid or expired token.",
              "data": [],
              "meta": {
                  "version": "1.0.0"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/profile
    metadata:
      groupName: Profile
      groupDescription: |-

        APIs for user profile management
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user profile'
      description: 'Get authenticated user profile information'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Profile fetched successfully",
            "data": {
              "id": 1,
              "first_name": "John",
              "last_name": "Doe",
              "email": "user@example.com",
              "email_verified_at": "2024-01-01T00:00:00.000000Z",
              "created_at": "2024-01-01T00:00:00.000000Z",
              "updated_at": "2024-01-01T00:00:00.000000Z"
            },
            "meta": {
              "version": "1.0.0"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/v1/profile/update
    metadata:
      groupName: Profile
      groupDescription: |-

        APIs for user profile management
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user profile'
      description: 'Update authenticated user profile information'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'User first name.'
        required: false
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'User last name.'
        required: false
        example: Doe
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      first_name: John
      last_name: Doe
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Profile updated successfully",
            "data": {
              "id": 1,
              "first_name": "John",
              "last_name": "Doe",
              "email": "user@example.com",
              "email_verified_at": "2024-01-01T00:00:00.000000Z",
              "created_at": "2024-01-01T00:00:00.000000Z",
              "updated_at": "2024-01-01T00:00:00.000000Z"
            },
            "meta": {
              "version": "1.0.0"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
